[{"C:\\projects\\kijiji\\server\\client\\src\\index.tsx":"1","C:\\projects\\kijiji\\server\\client\\src\\components\\App.tsx":"2","C:\\projects\\kijiji\\server\\client\\src\\browserHistory.tsx":"3","C:\\projects\\kijiji\\server\\client\\src\\components\\Routes.tsx":"4","C:\\projects\\kijiji\\server\\client\\src\\components\\Header.tsx":"5","C:\\projects\\kijiji\\server\\client\\src\\Root.tsx":"6","C:\\projects\\kijiji\\server\\client\\src\\reducers\\index.tsx":"7","C:\\projects\\kijiji\\server\\client\\src\\components\\PostAd.tsx":"8","C:\\projects\\kijiji\\server\\client\\src\\components\\Register.tsx":"9","C:\\projects\\kijiji\\server\\client\\src\\components\\SignIn.tsx":"10","C:\\projects\\kijiji\\server\\client\\src\\reducers\\authReducer.tsx":"11","C:\\projects\\kijiji\\server\\client\\src\\components\\requireAuth.tsx":"12","C:\\projects\\kijiji\\server\\client\\src\\components\\RegisterForm.tsx":"13","C:\\projects\\kijiji\\server\\client\\src\\components\\SignInForm.tsx":"14","C:\\projects\\kijiji\\server\\client\\src\\actions\\index.tsx":"15","C:\\projects\\kijiji\\server\\client\\src\\actions\\types.tsx":"16","C:\\projects\\kijiji\\server\\client\\src\\actions\\auth.tsx":"17","C:\\projects\\kijiji\\server\\client\\src\\actions\\axiosConfig.tsx":"18","C:\\projects\\kijiji\\server\\client\\src\\CookieService.tsx":"19","C:\\projects\\kijiji\\server\\client\\src\\reducers\\categoryReducer.tsx":"20","C:\\projects\\kijiji\\server\\client\\src\\reducers\\listingReducer.tsx":"21","C:\\projects\\kijiji\\server\\client\\src\\actions\\listing.tsx":"22","C:\\projects\\kijiji\\server\\client\\src\\components\\Loading.tsx":"23","C:\\projects\\kijiji\\server\\client\\src\\constants.tsx":"24","C:\\projects\\kijiji\\server\\client\\src\\components\\Listings.tsx":"25","C:\\projects\\kijiji\\server\\client\\src\\components\\Listing.tsx":"26","C:\\projects\\kijiji\\server\\client\\src\\components\\Pagination.tsx":"27","C:\\projects\\kijiji\\server\\client\\src\\components\\Searchbar.tsx":"28","C:\\projects\\kijiji\\server\\client\\src\\windowDimensions.tsx":"29","C:\\projects\\kijiji\\server\\client\\src\\components\\Modal.tsx":"30","C:\\projects\\kijiji\\server\\client\\src\\components\\SearchFilterForm.tsx":"31","C:\\projects\\kijiji\\server\\client\\src\\components\\LoadingDots.tsx":"32","C:\\projects\\kijiji\\server\\client\\src\\components\\ListingDetail.tsx":"33","C:\\projects\\kijiji\\server\\client\\src\\components\\Profile.tsx":"34","C:\\projects\\kijiji\\server\\client\\src\\reducers\\profileReducer.tsx":"35","C:\\projects\\kijiji\\server\\client\\src\\actions\\profile.tsx":"36","C:\\projects\\kijiji\\server\\client\\src\\components\\EditAd.tsx":"37","C:\\projects\\kijiji\\server\\client\\src\\components\\EditOrPostAdForm.tsx":"38"},{"size":317,"mtime":1608593598124,"results":"39","hashOfConfig":"40"},{"size":364,"mtime":1607913470313,"results":"41","hashOfConfig":"40"},{"size":89,"mtime":1607912608008,"results":"42","hashOfConfig":"40"},{"size":1071,"mtime":1611097135824,"results":"43","hashOfConfig":"40"},{"size":4107,"mtime":1611178693703,"results":"44","hashOfConfig":"40"},{"size":1832,"mtime":1608593598103,"results":"45","hashOfConfig":"40"},{"size":817,"mtime":1611190971629,"results":"46","hashOfConfig":"40"},{"size":1878,"mtime":1611197135775,"results":"47","hashOfConfig":"40"},{"size":2591,"mtime":1611196258934,"results":"48","hashOfConfig":"40"},{"size":2093,"mtime":1611196170718,"results":"49","hashOfConfig":"40"},{"size":954,"mtime":1609367265394,"results":"50","hashOfConfig":"40"},{"size":1791,"mtime":1608593598118,"results":"51","hashOfConfig":"40"},{"size":6636,"mtime":1609367265379,"results":"52","hashOfConfig":"40"},{"size":5098,"mtime":1608593598117,"results":"53","hashOfConfig":"40"},{"size":107,"mtime":1610646702147,"results":"54","hashOfConfig":"40"},{"size":1331,"mtime":1611178746903,"results":"55","hashOfConfig":"40"},{"size":3161,"mtime":1610761461680,"results":"56","hashOfConfig":"40"},{"size":3816,"mtime":1609367265357,"results":"57","hashOfConfig":"40"},{"size":1320,"mtime":1611198167132,"results":"58","hashOfConfig":"40"},{"size":476,"mtime":1611190354518,"results":"59","hashOfConfig":"40"},{"size":1381,"mtime":1611190949768,"results":"60","hashOfConfig":"40"},{"size":13118,"mtime":1611190709668,"results":"61","hashOfConfig":"40"},{"size":244,"mtime":1609367265371,"results":"62","hashOfConfig":"40"},{"size":11158,"mtime":1610761461693,"results":"63","hashOfConfig":"40"},{"size":9862,"mtime":1611194005875,"results":"64","hashOfConfig":"40"},{"size":3033,"mtime":1611196232673,"results":"65","hashOfConfig":"40"},{"size":1796,"mtime":1610399332832,"results":"66","hashOfConfig":"40"},{"size":7312,"mtime":1611197608124,"results":"67","hashOfConfig":"40"},{"size":727,"mtime":1610399332854,"results":"68","hashOfConfig":"40"},{"size":1281,"mtime":1611194345476,"results":"69","hashOfConfig":"40"},{"size":6077,"mtime":1611196437163,"results":"70","hashOfConfig":"40"},{"size":224,"mtime":1610399332829,"results":"71","hashOfConfig":"40"},{"size":6530,"mtime":1611193949481,"results":"72","hashOfConfig":"40"},{"size":3735,"mtime":1611197511233,"results":"73","hashOfConfig":"40"},{"size":662,"mtime":1611198200352,"results":"74","hashOfConfig":"40"},{"size":1427,"mtime":1611190830051,"results":"75","hashOfConfig":"40"},{"size":5064,"mtime":1611196212879,"results":"76","hashOfConfig":"40"},{"size":17600,"mtime":1611197114603,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"1pba2ji",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"80"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"80"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"80"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"80"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"80"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"80"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"80"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"80"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"80"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\projects\\kijiji\\server\\client\\src\\index.tsx",[],["164","165"],"C:\\projects\\kijiji\\server\\client\\src\\components\\App.tsx",[],"C:\\projects\\kijiji\\server\\client\\src\\browserHistory.tsx",[],"C:\\projects\\kijiji\\server\\client\\src\\components\\Routes.tsx",[],"C:\\projects\\kijiji\\server\\client\\src\\components\\Header.tsx",["166"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport history from \"../browserHistory\";\r\nimport { connect } from \"react-redux\";\r\nimport { signOut } from \"../actions\";\r\nimport { StoreState } from \"../reducers\";\r\nimport Searchbar from \"./Searchbar\";\r\nimport useWindowDimensions from \"../windowDimensions\";\r\nimport { MED_SCREEN_SIZE } from \"../constants\";\r\nimport kijijiLogo from \"../img/kijijiLogo.png\";\r\n\r\ninterface IHeader {\r\n    authStatus?: string | null;\r\n    signOut(): void;\r\n}\r\n\r\nconst Header: React.FC<IHeader> = (props) => {\r\n    const { width } = useWindowDimensions();\r\n\r\n    return (\r\n        <nav>\r\n            <div className=\"headerInfoWrap\">\r\n                <img\r\n                    className=\"logo\"\r\n                    src={kijijiLogo}\r\n                    alt=\"logo\"\r\n                    data-testid=\"kijijiLogo\"\r\n                    onClick={() => history.push(\"/listings/1\")}\r\n                />\r\n\r\n                <div\r\n                    className={\r\n                        width > MED_SCREEN_SIZE\r\n                            ? \"displaySearchbar\"\r\n                            : \"hideSearchbar\"\r\n                    }\r\n                >\r\n                    <Searchbar />\r\n                </div>\r\n                {/* {width > MED_SCREEN_SIZE ? <Searchbar /> : null} */}\r\n\r\n                <div className=\"headerProfileAndPostWrap\">\r\n                    <h1\r\n                        className={\r\n                            props.authStatus\r\n                                ? \"navAuthStatusHide\"\r\n                                : \"navAuthStatus\"\r\n                        }\r\n                        onClick={() => {\r\n                            history.push(\"/signup\");\r\n                        }}\r\n                    >\r\n                        Register\r\n                    </h1>\r\n                    <h1\r\n                        className={\r\n                            props.authStatus\r\n                                ? \"navAuthStatusHide\"\r\n                                : \"navAuthStatus\"\r\n                        }\r\n                        onClick={() => {\r\n                            history.push(\"/signin\");\r\n                        }}\r\n                    >\r\n                        Sign in\r\n                    </h1>\r\n                    <h1\r\n                        className={\r\n                            props.authStatus\r\n                                ? \"navAuthStatus\"\r\n                                : \"navAuthStatusHide\"\r\n                        }\r\n                        onClick={() => {\r\n                            props.signOut();\r\n                        }}\r\n                    >\r\n                        Sign Out\r\n                    </h1>\r\n                    <h1\r\n                        className={\r\n                            props.authStatus\r\n                                ? \"profileText\"\r\n                                : \"navAuthStatusHide\"\r\n                        }\r\n                        onClick={() => {\r\n                            history.push(\"/profile\");\r\n                        }}\r\n                    >\r\n                        Profile\r\n                    </h1>\r\n\r\n                    <button\r\n                        onClick={() => {\r\n                            history.push(\"/post-ad\");\r\n                        }}\r\n                        className=\"postAdButton\"\r\n                    >\r\n                        Post Ad\r\n                    </button>\r\n                </div>\r\n\r\n                <div\r\n                    className={\r\n                        width < MED_SCREEN_SIZE\r\n                            ? \"displaySearchbar\"\r\n                            : \"hideSearchbar\"\r\n                    }\r\n                >\r\n                    <Searchbar />\r\n                </div>\r\n\r\n                {/* {width < MED_SCREEN_SIZE ? <Searchbar /> : null} */}\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: StoreState) => {\r\n    return {\r\n        authStatus: state.authStatus.authenticated,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, { signOut })(Header);\r\n","C:\\projects\\kijiji\\server\\client\\src\\Root.tsx",[],"C:\\projects\\kijiji\\server\\client\\src\\reducers\\index.tsx",[],"C:\\projects\\kijiji\\server\\client\\src\\components\\PostAd.tsx",["167","168","169","170","171","172","173","174"],"C:\\projects\\kijiji\\server\\client\\src\\components\\Register.tsx",["175"],"C:\\projects\\kijiji\\server\\client\\src\\components\\SignIn.tsx",["176"],"C:\\projects\\kijiji\\server\\client\\src\\reducers\\authReducer.tsx",[],"C:\\projects\\kijiji\\server\\client\\src\\components\\requireAuth.tsx",["177"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { StoreState } from \"../reducers\";\r\nimport { History } from \"history\";\r\nimport { validateToken } from \"../actions\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport history from \"../browserHistory\";\r\n\r\nexport interface IHoc {\r\n    authStatus?: string | null;\r\n    history: History;\r\n    validateToken(path: string, retriedCalling: boolean): void;\r\n}\r\n\r\nconst hoc = (ChildComponent: any) => {\r\n    class ComposedComponent extends Component<IHoc> {\r\n        // Our component just got rendered\r\n        //Check for redux store's authStatus\r\n        componentDidMount() {\r\n            this.shouldNavigateAway();\r\n        }\r\n\r\n        // Our component just got updated\r\n        //If our redux store's authStatus changes\r\n        componentDidUpdate() {\r\n            this.shouldNavigateAway();\r\n        }\r\n\r\n        shouldNavigateAway() {\r\n            if (!this.props.authStatus) {\r\n                //if authStatus is empty string\r\n                //history is automatically passed due to React-router\r\n                //If done loading\r\n                this.props.history.push(\"/\");\r\n            } else {\r\n                //When user enter a page,\r\n                //validate access token, if it's not valid, redux's authStatus would be empty\r\n\r\n                this.props.validateToken(history.location.pathname, false);\r\n            }\r\n        }\r\n\r\n        render() {\r\n            return <ChildComponent {...this.props} />;\r\n        }\r\n    }\r\n\r\n    function mapStateToProps(state: StoreState) {\r\n        return {\r\n            authStatus: state.authStatus.authenticated,\r\n        };\r\n    }\r\n\r\n    return connect(mapStateToProps, { validateToken })(ComposedComponent);\r\n};\r\n\r\nexport default hoc;\r\n","C:\\projects\\kijiji\\server\\client\\src\\components\\RegisterForm.tsx",["178","179","180","181","182"],"import React, { ComponentType, useEffect } from \"react\";\r\nimport {\r\n    Field,\r\n    reduxForm,\r\n    reset,\r\n    change,\r\n    FormErrors,\r\n    InjectedFormProps,\r\n} from \"redux-form\";\r\n//compose is used to make it easier to \"organize\" mapStateToProps and redux form\r\nimport { StoreState } from \"../reducers\";\r\nimport { connect } from \"react-redux\";\r\nimport { RegisterFormProps } from \"./Register\";\r\n//Re-usable component\r\nexport interface RegisterFormValues {\r\n    email: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    password: string;\r\n}\r\n\r\n//Typescriptand redux form:\r\n//https://levelup.gitconnected.com/react-js-typescript-redux-redux-form-jest-e522995ebe36\r\n\r\n//Need to hoist render methods up or else it will give error where it will unfocus after first characther is typed\r\n//https://stackoverflow.com/questions/39839051/using-redux-form-im-losing-focus-after-typing-the-first-character\r\n\r\nconst renderError = ({ error, touched }: any) => {\r\n    if (touched && error) {\r\n        //Touched (for input) will be false at first\r\n        //When clicked and then clicked otuside of the input, it will be true\r\n        return <div className=\"errorText\">{error}</div>;\r\n    }\r\n};\r\n\r\nconst renderTextInput = ({ input, label, meta, placeHolder }: any) => {\r\n    //\"component\" property automatically passes props to argument, it has {input properties and meta properties}\r\n    //\"label\" automatically passes props to arguments\r\n    return (\r\n        <div>\r\n            <label>{label}</label>\r\n            <input\r\n                data-testid=\"registerTextInput\"\r\n                className=\"createAuthInputs\"\r\n                {...input}\r\n                autoComplete=\"off\"\r\n            />\r\n            {renderError(meta)}\r\n        </div>\r\n    );\r\n    //{..input} is shortcut for redux-form; where you take all the input from \"component's\" props and pass it as\r\n    //props to <input>\r\n};\r\n\r\nconst renderPasswordInput = ({ input, label, meta, placeHolder }: any) => {\r\n    return (\r\n        <div>\r\n            <label>{label}</label>\r\n            <input\r\n                className=\"createAuthInputs\"\r\n                type=\"password\"\r\n                {...input}\r\n                autoComplete=\"off\"\r\n            />\r\n            {renderError(meta)}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst RegisterForm: React.FC<\r\n    RegisterFormProps & InjectedFormProps<{}, RegisterFormProps>\r\n> = (props) => {\r\n    const onSubmit = (formValues: any, dispatch: any) => {\r\n        //onSubmit's default param is any\r\n        //event.preventDefault() is automatically called with handleSubmit, a redux-form property\r\n        //form values are the values from the fields that redux-form automatiacally passes\r\n        //after clicking the submit button\r\n        //dispatch(reset(\"registerForm\"));\r\n        props.onSubmit(formValues);\r\n\r\n        //dispatch(change(\"registerForm\", \"password\", \"\"));\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <form className=\"authForm\" onSubmit={props.handleSubmit(onSubmit)}>\r\n                <h1>Register</h1>\r\n                <div className=\"authFieldSection\">\r\n                    <div className=\"authFormFieldTitleWrap\">\r\n                        <h1>Email</h1>\r\n                        <h3 className=\"authFormFieldTitleEmailInUse\">\r\n                            {props.authStatus}\r\n                        </h3>\r\n                    </div>\r\n                    <Field\r\n                        name=\"email\"\r\n                        type=\"text\"\r\n                        component={renderTextInput}\r\n                    />\r\n                </div>\r\n                <div className=\"authFieldSection\">\r\n                    <div className=\"authFormFieldTitleWrap\">\r\n                        <h1>First Name</h1>\r\n                        <h3 className=\"authFormFieldTitleEmailInUse\">\r\n                            {props.authStatus}\r\n                        </h3>\r\n                    </div>\r\n                    <Field\r\n                        name=\"firstName\"\r\n                        type=\"text\"\r\n                        component={renderTextInput}\r\n                    />\r\n                </div>\r\n                <div className=\"authFieldSection\">\r\n                    <div className=\"authFormFieldTitleWrap\">\r\n                        <h1>Last Name</h1>\r\n                        <h3 className=\"authFormFieldTitleEmailInUse\">\r\n                            {props.authStatus}\r\n                        </h3>\r\n                    </div>\r\n                    <Field\r\n                        name=\"lastName\"\r\n                        type=\"text\"\r\n                        component={renderTextInput}\r\n                    />\r\n                </div>\r\n                <div className=\"authFieldSection\">\r\n                    <div className=\"authFormFieldTitleWrap\">\r\n                        <h1>Password</h1>\r\n                        <h3 className=\"authFormFieldTitleEmailInUse\">\r\n                            {props.authStatus}\r\n                        </h3>\r\n                    </div>\r\n                    <Field\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        component={renderPasswordInput}\r\n                    />\r\n                </div>\r\n\r\n                <button data-testid=\"registerButton\" className=\"authButton\">\r\n                    Register\r\n                </button>\r\n            </form>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst validate = (\r\n    formValues: RegisterFormValues\r\n): FormErrors<RegisterFormValues> => {\r\n    //MUST BE NAMED VALIDATE! Other names would be ignored by reduxForm(..)\r\n    const errors: FormErrors<RegisterFormValues> = {};\r\n    //If you return an empty object, redux form will assume everything is ok\r\n    if (!formValues.email) {\r\n        //user did not enter title, so undefined\r\n        errors.email = \"You must enter an email\";\r\n        //Must be the same name as field name! The \"error\" property in {meta} would receive this\r\n    }\r\n\r\n    if (!formValues.firstName) {\r\n        errors.firstName = \"You must enter your first name\";\r\n    }\r\n\r\n    if (!formValues.lastName) {\r\n        errors.lastName = \"You must enter your last name\";\r\n    }\r\n    if (!formValues.password) {\r\n        errors.password = \"You must enter a password\";\r\n    }\r\n\r\n    return errors;\r\n    //Erors is going to be passed to renderInput's meta\r\n};\r\n\r\n// const mapStateToProps = (state: StoreState) => {\r\n//     return {\r\n//         authStatus: state.authStatus.errorMessage,\r\n//     };\r\n// };\r\n\r\nexport default connect()(\r\n    reduxForm<{}, RegisterFormProps>({\r\n        form: \"registerForm\",\r\n        validate,\r\n    })(RegisterForm)\r\n);\r\n","C:\\projects\\kijiji\\server\\client\\src\\components\\SignInForm.tsx",["183","184","185","186"],"import React, { ComponentType, useEffect } from \"react\";\r\nimport {\r\n    Field,\r\n    reduxForm,\r\n    reset,\r\n    change,\r\n    FormErrors,\r\n    InjectedFormProps,\r\n} from \"redux-form\";\r\n//compose is used to make it easier to \"organize\" mapStateToProps and redux form\r\nimport { StoreState } from \"../reducers\";\r\nimport { connect } from \"react-redux\";\r\nimport { SignInFormProps } from \"./SignIn\";\r\n//Re-usable component\r\nexport interface SignInFormValues {\r\n    email: string;\r\n    password: string;\r\n}\r\n\r\n//Typescriptand redux form:\r\n//https://levelup.gitconnected.com/react-js-typescript-redux-redux-form-jest-e522995ebe36\r\n\r\n//Need to hoist render methods up or else it will give error where it will unfocus after first characther is typed\r\n//https://stackoverflow.com/questions/39839051/using-redux-form-im-losing-focus-after-typing-the-first-character\r\n\r\nconst renderError = ({ error, touched }: any) => {\r\n    if (touched && error) {\r\n        //Touched (for input) will be false at first\r\n        //When clicked and then clicked otuside of the input, it will be true\r\n        return <div className=\"errorText\">{error}</div>;\r\n    }\r\n};\r\n\r\nconst renderTextInput = ({ input, label, meta, placeHolder }: any) => {\r\n    //\"component\" property automatically passes props to argument, it has {input properties and meta properties}\r\n    //\"label\" automatically passes props to arguments\r\n    return (\r\n        <div>\r\n            <label>{label}</label>\r\n            <input className=\"createAuthInputs\" {...input} autoComplete=\"off\" />\r\n            {renderError(meta)}\r\n        </div>\r\n    );\r\n    //{..input} is shortcut for redux-form; where you take all the input from \"component's\" props and pass it as\r\n    //props to <input>\r\n};\r\n\r\nconst renderPasswordInput = ({ input, label, meta, placeHolder }: any) => {\r\n    return (\r\n        <div>\r\n            <label>{label}</label>\r\n            <input\r\n                className=\"createAuthInputs\"\r\n                type=\"password\"\r\n                {...input}\r\n                autoComplete=\"off\"\r\n            />\r\n            {renderError(meta)}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst SignInForm: React.FC<\r\n    SignInFormProps & InjectedFormProps<{}, SignInFormProps>\r\n> = (props) => {\r\n    const onSubmit = (formValues: any, dispatch: any) => {\r\n        //onSubmit's default param is any\r\n        //event.preventDefault() is automatically called with handleSubmit, a redux-form property\r\n        //form values are the values from the fields that redux-form automatiacally passes\r\n        //after clicking the submit button\r\n        //dispatch(reset(\"registerForm\"));\r\n        props.onSubmit(formValues);\r\n        // dispatch(change(\"signInForm\", \"password\", \"\"));\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <form className=\"authForm\" onSubmit={props.handleSubmit(onSubmit)}>\r\n                <h1>Sign In</h1>\r\n                <div className=\"authFieldSection\">\r\n                    <div className=\"authFormFieldTitleWrap\">\r\n                        <h1>Email</h1>\r\n                        <h3 className=\"authFormFieldTitleEmailInUse\">\r\n                            {props.authStatus}\r\n                        </h3>\r\n                    </div>\r\n                    <Field\r\n                        name=\"email\"\r\n                        type=\"text\"\r\n                        component={renderTextInput}\r\n                    />\r\n                </div>\r\n                <div className=\"authFieldSection\">\r\n                    <div className=\"authFormFieldTitleWrap\">\r\n                        <h1>Password</h1>\r\n                        <h3 className=\"authFormFieldTitleEmailInUse\">\r\n                            {props.authStatus}\r\n                        </h3>\r\n                    </div>\r\n                    <Field\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        component={renderPasswordInput}\r\n                    />\r\n                </div>\r\n\r\n                <button className=\"authButton\">Sign In</button>\r\n            </form>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst validate = (\r\n    formValues: SignInFormValues\r\n): FormErrors<SignInFormValues> => {\r\n    //MUST BE NAMED VALIDATE! Other names would be ignored by reduxForm(..)\r\n    const errors: FormErrors<SignInFormValues> = {};\r\n    //If you return an empty object, redux form will assume everything is ok\r\n    if (!formValues.email) {\r\n        //user did not enter title, so undefined\r\n        errors.email = \"You must enter an email\";\r\n        //Must be the same name as field name! The \"error\" property in {meta} would receive this\r\n    }\r\n    if (!formValues.password) {\r\n        errors.password = \"You must enter a password\";\r\n    }\r\n    return errors;\r\n    //Erors is going to be passed to renderInput's meta\r\n};\r\n\r\nconst mapStateToProps = (state: StoreState) => {\r\n    return {\r\n        authStatus: state.authStatus.errorMessage,\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {}\r\n)(\r\n    reduxForm<{}, SignInFormProps>({\r\n        form: \"signInForm\",\r\n        validate,\r\n    })(SignInForm)\r\n);\r\n","C:\\projects\\kijiji\\server\\client\\src\\actions\\index.tsx",[],"C:\\projects\\kijiji\\server\\client\\src\\actions\\types.tsx",["187"],"import {\r\n    AuthUserAction,\r\n    AuthErrorAction,\r\n    FetchCategoriesForListingAction,\r\n    FetchCategoriesForListingErrorAction,\r\n    UploadImageToCloudinaryAction,\r\n    CreateListingAction,\r\n    ListingErrorAction,\r\n    FetchListingsAction,\r\n    FetchListingDetailAction,\r\n    DeleteListingAction,\r\n} from \"../actions\";\r\nimport { EditListingAction } from \"./listing\";\r\nimport { FetchUserProfileAction, FetchUserProfileErrorAction } from \"./profile\";\r\nexport enum ActionTypes {\r\n    AUTH_USER,\r\n    AUTH_ERROR,\r\n    FETCH_CATEGORIES_FOR_LISTING,\r\n    FETCH_CATEGORIES_FOR_LISTING_ERROR,\r\n    UPLOAD_IMAGE_TO_CLOUDINARY,\r\n    CREATE_LISTING,\r\n    LISTING_ERROR,\r\n    FETCH_LISTINGS,\r\n    FETCH_LISTING_DETAIL,\r\n    FETCH_USER_PROFILE,\r\n    FETCH_USER_PROFILE_ERROR,\r\n    EDIT_LISTING,\r\n    DELETE_LISTING,\r\n}\r\nexport type AuthActions = AuthUserAction | AuthErrorAction;\r\nexport type FetchCategoriesActions =\r\n    | FetchCategoriesForListingAction\r\n    | FetchCategoriesForListingErrorAction;\r\nexport type ListingAction =\r\n    // | UploadImageToCloudinaryAction\r\n    | CreateListingAction\r\n    | ListingErrorAction\r\n    | FetchListingsAction\r\n    | FetchListingDetailAction\r\n    | EditListingAction\r\n    | DeleteListingAction;\r\n\r\nexport type UserProfileAction =\r\n    | FetchUserProfileAction\r\n    | FetchUserProfileErrorAction;\r\n","C:\\projects\\kijiji\\server\\client\\src\\actions\\auth.tsx",["188"],"import { ActionTypes } from \"./types\";\r\nimport auth from \"./axiosConfig\";\r\nimport { Dispatch } from \"redux\";\r\nimport history from \"../browserHistory\";\r\nimport CookieService from \"../CookieService\";\r\n\r\nexport interface JWTType {\r\n    token: string;\r\n}\r\nexport interface AuthUserAction {\r\n    type: ActionTypes.AUTH_USER;\r\n    payload: JWTType;\r\n}\r\nexport interface AuthErrorAction {\r\n    type: ActionTypes.AUTH_ERROR;\r\n    payload: string;\r\n}\r\n\r\nexport const signUp = (formValues: any) => async (dispatch: Dispatch) => {\r\n    try {\r\n        const response = await auth.post<JWTType>(\"/signup\", formValues);\r\n        dispatch<AuthUserAction>({\r\n            type: ActionTypes.AUTH_USER,\r\n            payload: response.data,\r\n        });\r\n        //Save token to local storage so that we could persist login state, keep user log in\r\n        // localStorage.setItem(\"token\", response.data.token);\r\n        // history.push(\"/walkman\");\r\n    } catch (err) {\r\n        dispatch<AuthErrorAction>({\r\n            type: ActionTypes.AUTH_ERROR,\r\n            payload: \"- Email is in use\",\r\n        });\r\n    }\r\n};\r\nexport const signIn = (formValues: any) => async (dispatch: Dispatch) => {\r\n    try {\r\n        const response = await auth.post<JWTType>(\"/signin\", formValues);\r\n        dispatch<AuthUserAction>({\r\n            type: ActionTypes.AUTH_USER,\r\n            payload: response.data,\r\n        });\r\n        //Save token to local storage so that we could persist login state, keep user log in\r\n        //localStorage.setItem(\"token\", response.data.token);\r\n        //history.push(\"/walkman\");\r\n    } catch (err) {\r\n        // if (err.message === \"Network Error\") {\r\n        //     console.log(\"check error\", err);\r\n        // }\r\n\r\n        dispatch<AuthErrorAction>({\r\n            type: ActionTypes.AUTH_ERROR,\r\n            payload: \"- Invalid login credentials\",\r\n        });\r\n    }\r\n};\r\n\r\nexport const signOut = () => async (dispatch: Dispatch) => {\r\n    try {\r\n        const response = await auth.post<JWTType>(\"/signout\");\r\n        dispatch<AuthUserAction>({\r\n            type: ActionTypes.AUTH_USER,\r\n            payload: response.data,\r\n        });\r\n        alert(\"Logged out succesfully\");\r\n    } catch (err) {\r\n        alert(\"Log out failed, try again\");\r\n    }\r\n};\r\n\r\nexport const validateToken = (path: string, retriedCalling: boolean) => async (\r\n    dispatch: Dispatch\r\n) => {\r\n    try {\r\n        const response = await auth.post<JWTType>(\r\n            path,\r\n            {}\r\n            // { headers: { Authorization: cookieService.getAccessToken() } } //assigned in axios' interceptors.request\r\n        );\r\n        //Ensures that our current access token is the newest one; if a new access token is given,\r\n        //we will update our current access token\r\n\r\n        //requireAuth HOC relies on the dispatch below\r\n        dispatch<AuthUserAction>({\r\n            type: ActionTypes.AUTH_USER,\r\n            payload: response.data,\r\n        });\r\n    } catch (err) {\r\n        if (retriedCalling === true) {\r\n            // If it fails again with the new access token (might be a forged token)\r\n            // Invalid token, kick our users out from a certain resource only accecible to signed in users\r\n            // dispatch<AuthErrorAction>({\r\n            //     type: ActionTypes.AUTH_ERROR,\r\n            //     payload: \"\",\r\n            // });\r\n\r\n            //Log them out\r\n            dispatch(signOut() as any);\r\n        }\r\n    }\r\n};\r\n","C:\\projects\\kijiji\\server\\client\\src\\actions\\axiosConfig.tsx",[],"C:\\projects\\kijiji\\server\\client\\src\\CookieService.tsx",[],"C:\\projects\\kijiji\\server\\client\\src\\reducers\\categoryReducer.tsx",[],"C:\\projects\\kijiji\\server\\client\\src\\reducers\\listingReducer.tsx",["189"],"C:\\projects\\kijiji\\server\\client\\src\\actions\\listing.tsx",[],"C:\\projects\\kijiji\\server\\client\\src\\components\\Loading.tsx",["190"],"import React from \"react\";\r\nimport { css } from \"@emotion/core\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nconst Loading = (): JSX.Element => {\r\n    return <ClipLoader color={\"grey\"} loading={true} />;\r\n};\r\nexport default Loading;\r\n","C:\\projects\\kijiji\\server\\client\\src\\constants.tsx",[],"C:\\projects\\kijiji\\server\\client\\src\\components\\Listings.tsx",["191","192","193","194","195"],"C:\\projects\\kijiji\\server\\client\\src\\components\\Listing.tsx",["196"],"C:\\projects\\kijiji\\server\\client\\src\\components\\Pagination.tsx",["197","198"],"import React, { useState } from \"react\";\r\nimport history from \"../browserHistory\";\r\n\r\ninterface PaginationProps {\r\n    totalItems: number;\r\n    itemLimit: number;\r\n    currentPage: number;\r\n    onClickCallback(pageNumber: number): void;\r\n    query: string;\r\n}\r\n\r\nconst Pagination: React.FC<PaginationProps> = (props) => {\r\n    const renderPageItems = (totalItems: number, itemLimit: number) => {\r\n        let numberOfPageItems = Math.ceil(totalItems / itemLimit); //rounds up\r\n        let pageItems = [];\r\n        for (let i = 0; i < numberOfPageItems; i++) {\r\n            pageItems.push(i + 1);\r\n        }\r\n\r\n        return (\r\n            <ul className=\"pagination\">\r\n                {pageItems.map((pageNumber) => {\r\n                    return (\r\n                        <li\r\n                            key={pageNumber}\r\n                            onClick={() => {\r\n                                props.onClickCallback(pageNumber);\r\n                                history.push({\r\n                                    pathname: `/listings/${pageNumber}`,\r\n                                    search: `${props.query}`,\r\n                                });\r\n                            }}\r\n                            className={\r\n                                props.currentPage == pageNumber\r\n                                    ? \"pageItemSelected\"\r\n                                    : \"pageItem\"\r\n                            }\r\n                        >\r\n                            {pageNumber}\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ul>\r\n        );\r\n    };\r\n    return (\r\n        <React.Fragment>\r\n            {renderPageItems(props.totalItems, props.itemLimit)}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Pagination;\r\n","C:\\projects\\kijiji\\server\\client\\src\\components\\Searchbar.tsx",["199","200","201","202","203","204"],"C:\\projects\\kijiji\\server\\client\\src\\windowDimensions.tsx",["205"],"import React from \"react\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst getWindowDimensions = () => {\r\n    const { innerWidth: width, innerHeight: height } = window;\r\n    return {\r\n        width,\r\n        height,\r\n    };\r\n};\r\n\r\nconst useWindowDimensions = () => {\r\n    const [windowDimensions, setWindowDimensions] = useState(\r\n        getWindowDimensions()\r\n    );\r\n\r\n    useEffect(() => {\r\n        function handleResize() {\r\n            setWindowDimensions(getWindowDimensions());\r\n        }\r\n\r\n        window.addEventListener(\"resize\", handleResize);\r\n        return () => window.removeEventListener(\"resize\", handleResize);\r\n    }, []);\r\n\r\n    return windowDimensions;\r\n};\r\nexport default useWindowDimensions;\r\n","C:\\projects\\kijiji\\server\\client\\src\\components\\Modal.tsx",[],"C:\\projects\\kijiji\\server\\client\\src\\components\\SearchFilterForm.tsx",["206","207","208"],"C:\\projects\\kijiji\\server\\client\\src\\components\\LoadingDots.tsx",[],"C:\\projects\\kijiji\\server\\client\\src\\components\\ListingDetail.tsx",["209","210","211","212","213"],"C:\\projects\\kijiji\\server\\client\\src\\components\\Profile.tsx",["214","215","216","217","218","219"],"C:\\projects\\kijiji\\server\\client\\src\\reducers\\profileReducer.tsx",["220"],"C:\\projects\\kijiji\\server\\client\\src\\actions\\profile.tsx",[],"C:\\projects\\kijiji\\server\\client\\src\\components\\EditAd.tsx",["221","222","223","224","225","226","227"],"C:\\projects\\kijiji\\server\\client\\src\\components\\EditOrPostAdForm.tsx",["228","229"],{"ruleId":"230","replacedBy":"231"},{"ruleId":"232","replacedBy":"233"},{"ruleId":"234","severity":1,"message":"235","line":2,"column":10,"nodeType":"236","messageId":"237","endLine":2,"endColumn":14},{"ruleId":"234","severity":1,"message":"238","line":1,"column":17,"nodeType":"236","messageId":"237","endLine":1,"endColumn":26},{"ruleId":"234","severity":1,"message":"239","line":1,"column":28,"nodeType":"236","messageId":"237","endLine":1,"endColumn":36},{"ruleId":"234","severity":1,"message":"235","line":2,"column":10,"nodeType":"236","messageId":"237","endLine":2,"endColumn":14},{"ruleId":"234","severity":1,"message":"240","line":2,"column":16,"nodeType":"236","messageId":"237","endLine":2,"endColumn":27},{"ruleId":"234","severity":1,"message":"241","line":7,"column":25,"nodeType":"236","messageId":"237","endLine":7,"endColumn":32},{"ruleId":"234","severity":1,"message":"242","line":8,"column":8,"nodeType":"236","messageId":"237","endLine":8,"endColumn":18},{"ruleId":"234","severity":1,"message":"243","line":9,"column":8,"nodeType":"236","messageId":"237","endLine":9,"endColumn":21},{"ruleId":"234","severity":1,"message":"244","line":11,"column":8,"nodeType":"236","messageId":"237","endLine":11,"endColumn":15},{"ruleId":"245","severity":1,"message":"246","line":29,"column":8,"nodeType":"247","endLine":29,"endColumn":10,"suggestions":"248"},{"ruleId":"245","severity":1,"message":"246","line":28,"column":8,"nodeType":"247","endLine":28,"endColumn":10,"suggestions":"249"},{"ruleId":"234","severity":1,"message":"240","line":6,"column":10,"nodeType":"236","messageId":"237","endLine":6,"endColumn":21},{"ruleId":"234","severity":1,"message":"250","line":1,"column":17,"nodeType":"236","messageId":"237","endLine":1,"endColumn":30},{"ruleId":"234","severity":1,"message":"238","line":1,"column":32,"nodeType":"236","messageId":"237","endLine":1,"endColumn":41},{"ruleId":"234","severity":1,"message":"251","line":5,"column":5,"nodeType":"236","messageId":"237","endLine":5,"endColumn":10},{"ruleId":"234","severity":1,"message":"252","line":6,"column":5,"nodeType":"236","messageId":"237","endLine":6,"endColumn":11},{"ruleId":"234","severity":1,"message":"253","line":11,"column":10,"nodeType":"236","messageId":"237","endLine":11,"endColumn":20},{"ruleId":"234","severity":1,"message":"250","line":1,"column":17,"nodeType":"236","messageId":"237","endLine":1,"endColumn":30},{"ruleId":"234","severity":1,"message":"238","line":1,"column":32,"nodeType":"236","messageId":"237","endLine":1,"endColumn":41},{"ruleId":"234","severity":1,"message":"251","line":5,"column":5,"nodeType":"236","messageId":"237","endLine":5,"endColumn":10},{"ruleId":"234","severity":1,"message":"252","line":6,"column":5,"nodeType":"236","messageId":"237","endLine":6,"endColumn":11},{"ruleId":"234","severity":1,"message":"254","line":6,"column":5,"nodeType":"236","messageId":"237","endLine":6,"endColumn":34},{"ruleId":"234","severity":1,"message":"243","line":5,"column":8,"nodeType":"236","messageId":"237","endLine":5,"endColumn":21},{"ruleId":"234","severity":1,"message":"255","line":8,"column":8,"nodeType":"236","messageId":"237","endLine":8,"endColumn":9},{"ruleId":"234","severity":1,"message":"256","line":2,"column":10,"nodeType":"236","messageId":"237","endLine":2,"endColumn":13},{"ruleId":"234","severity":1,"message":"235","line":2,"column":10,"nodeType":"236","messageId":"237","endLine":2,"endColumn":14},{"ruleId":"234","severity":1,"message":"257","line":3,"column":8,"nodeType":"236","messageId":"237","endLine":3,"endColumn":15},{"ruleId":"234","severity":1,"message":"258","line":16,"column":8,"nodeType":"236","messageId":"237","endLine":16,"endColumn":19},{"ruleId":"234","severity":1,"message":"259","line":17,"column":23,"nodeType":"236","messageId":"237","endLine":17,"endColumn":32},{"ruleId":"245","severity":1,"message":"260","line":206,"column":8,"nodeType":"247","endLine":206,"endColumn":41,"suggestions":"261"},{"ruleId":"234","severity":1,"message":"235","line":2,"column":10,"nodeType":"236","messageId":"237","endLine":2,"endColumn":14},{"ruleId":"234","severity":1,"message":"239","line":1,"column":17,"nodeType":"236","messageId":"237","endLine":1,"endColumn":25},{"ruleId":"262","severity":1,"message":"263","line":34,"column":51,"nodeType":"264","messageId":"265","endLine":34,"endColumn":53},{"ruleId":"234","severity":1,"message":"235","line":2,"column":10,"nodeType":"236","messageId":"237","endLine":2,"endColumn":14},{"ruleId":"234","severity":1,"message":"266","line":11,"column":10,"nodeType":"236","messageId":"237","endLine":11,"endColumn":16},{"ruleId":"234","severity":1,"message":"267","line":11,"column":18,"nodeType":"236","messageId":"237","endLine":11,"endColumn":25},{"ruleId":"268","severity":1,"message":"269","line":54,"column":29,"nodeType":"270","messageId":"271","endLine":54,"endColumn":31},{"ruleId":"245","severity":1,"message":"272","line":107,"column":8,"nodeType":"247","endLine":107,"endColumn":10,"suggestions":"273"},{"ruleId":"268","severity":1,"message":"269","line":113,"column":48,"nodeType":"270","messageId":"271","endLine":113,"endColumn":50},{"ruleId":"234","severity":1,"message":"274","line":1,"column":8,"nodeType":"236","messageId":"237","endLine":1,"endColumn":13},{"ruleId":"234","severity":1,"message":"250","line":1,"column":17,"nodeType":"236","messageId":"237","endLine":1,"endColumn":30},{"ruleId":"234","severity":1,"message":"239","line":1,"column":32,"nodeType":"236","messageId":"237","endLine":1,"endColumn":40},{"ruleId":"245","severity":1,"message":"275","line":66,"column":8,"nodeType":"247","endLine":66,"endColumn":10,"suggestions":"276"},{"ruleId":"234","severity":1,"message":"235","line":2,"column":10,"nodeType":"236","messageId":"237","endLine":2,"endColumn":14},{"ruleId":"234","severity":1,"message":"257","line":3,"column":8,"nodeType":"236","messageId":"237","endLine":3,"endColumn":15},{"ruleId":"234","severity":1,"message":"277","line":7,"column":22,"nodeType":"236","messageId":"237","endLine":7,"endColumn":39},{"ruleId":"245","severity":1,"message":"275","line":24,"column":8,"nodeType":"247","endLine":24,"endColumn":10,"suggestions":"278"},{"ruleId":"234","severity":1,"message":"279","line":51,"column":17,"nodeType":"236","messageId":"237","endLine":51,"endColumn":27},{"ruleId":"234","severity":1,"message":"239","line":1,"column":28,"nodeType":"236","messageId":"237","endLine":1,"endColumn":36},{"ruleId":"234","severity":1,"message":"235","line":2,"column":10,"nodeType":"236","messageId":"237","endLine":2,"endColumn":14},{"ruleId":"234","severity":1,"message":"257","line":3,"column":8,"nodeType":"236","messageId":"237","endLine":3,"endColumn":15},{"ruleId":"234","severity":1,"message":"277","line":6,"column":27,"nodeType":"236","messageId":"237","endLine":6,"endColumn":44},{"ruleId":"234","severity":1,"message":"280","line":7,"column":8,"nodeType":"236","messageId":"237","endLine":7,"endColumn":37},{"ruleId":"245","severity":1,"message":"275","line":23,"column":8,"nodeType":"247","endLine":23,"endColumn":10,"suggestions":"281"},{"ruleId":"234","severity":1,"message":"255","line":8,"column":8,"nodeType":"236","messageId":"237","endLine":8,"endColumn":9},{"ruleId":"234","severity":1,"message":"239","line":1,"column":28,"nodeType":"236","messageId":"237","endLine":1,"endColumn":36},{"ruleId":"234","severity":1,"message":"235","line":2,"column":10,"nodeType":"236","messageId":"237","endLine":2,"endColumn":14},{"ruleId":"234","severity":1,"message":"240","line":2,"column":16,"nodeType":"236","messageId":"237","endLine":2,"endColumn":27},{"ruleId":"234","severity":1,"message":"242","line":7,"column":8,"nodeType":"236","messageId":"237","endLine":7,"endColumn":18},{"ruleId":"234","severity":1,"message":"243","line":8,"column":8,"nodeType":"236","messageId":"237","endLine":8,"endColumn":21},{"ruleId":"234","severity":1,"message":"282","line":14,"column":10,"nodeType":"236","messageId":"237","endLine":14,"endColumn":29},{"ruleId":"245","severity":1,"message":"275","line":36,"column":8,"nodeType":"247","endLine":36,"endColumn":10,"suggestions":"283"},{"ruleId":"234","severity":1,"message":"251","line":5,"column":5,"nodeType":"236","messageId":"237","endLine":5,"endColumn":10},{"ruleId":"245","severity":1,"message":"275","line":157,"column":8,"nodeType":"247","endLine":157,"endColumn":10,"suggestions":"284"},"no-native-reassign",["285"],"no-negated-in-lhs",["286"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","'useLocation' is defined but never used.","'Listing' is defined but never used.","'jwt_decode' is defined but never used.","'CookieService' is defined but never used.","'Loading' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.authStatus'. Either include it or remove the dependency array.","ArrayExpression",["287"],["288"],"'ComponentType' is defined but never used.","'reset' is defined but never used.","'change' is defined but never used.","'StoreState' is defined but never used.","'UploadImageToCloudinaryAction' is defined but never used.","'_' is defined but never used.","'css' is defined but never used.","'history' is defined but never used.","'queryString' is defined but never used.","'useParams' is defined but never used.","React Hook useEffect has missing dependencies: 'currentPage', 'props', and 'selectedSort'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["289"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'filter' is defined but never used.","'initial' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'queryValues.category', 'queryValues.city', 'queryValues.province', and 'queryValues.search'. Either include them or remove the dependency array.",["290"],"'React' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["291"],"'ListingDetailType' is defined but never used.",["292"],"'listing_id' is assigned a value but never used.","'postAdListingImagePlaceHolder' is defined but never used.",["293"],"'ListingDataResponse' is defined but never used.",["294"],["295"],"no-global-assign","no-unsafe-negation",{"desc":"296","fix":"297"},{"desc":"296","fix":"298"},{"desc":"299","fix":"300"},{"desc":"301","fix":"302"},{"desc":"303","fix":"304"},{"desc":"303","fix":"305"},{"desc":"303","fix":"306"},{"desc":"303","fix":"307"},{"desc":"303","fix":"308"},"Update the dependencies array to be: [props.authStatus]",{"range":"309","text":"310"},{"range":"311","text":"310"},"Update the dependencies array to be: [currentPage, props, props.match.params.page, search, selectedSort]",{"range":"312","text":"313"},"Update the dependencies array to be: [queryValues.category, queryValues.city, queryValues.province, queryValues.search]",{"range":"314","text":"315"},"Update the dependencies array to be: [props]",{"range":"316","text":"317"},{"range":"318","text":"317"},{"range":"319","text":"317"},{"range":"320","text":"317"},{"range":"321","text":"317"},[908,910],"[props.authStatus]",[888,890],[9394,9427],"[currentPage, props, props.match.params.page, search, selectedSort]",[4017,4019],"[queryValues.category, queryValues.city, queryValues.province, queryValues.search]",[2189,2191],"[props]",[869,871],[925,927],[1326,1328],[5194,5196]]