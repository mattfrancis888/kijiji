[{"C:\\projects\\kijiji\\server\\client\\src\\index.tsx":"1","C:\\projects\\kijiji\\server\\client\\src\\components\\App.tsx":"2","C:\\projects\\kijiji\\server\\client\\src\\browserHistory.tsx":"3","C:\\projects\\kijiji\\server\\client\\src\\components\\Routes.tsx":"4","C:\\projects\\kijiji\\server\\client\\src\\components\\Header.tsx":"5","C:\\projects\\kijiji\\server\\client\\src\\components\\RegisterForm.tsx":"6","C:\\projects\\kijiji\\server\\client\\src\\Root.tsx":"7","C:\\projects\\kijiji\\server\\client\\src\\reducers\\index.tsx":"8","C:\\projects\\kijiji\\server\\client\\src\\components\\Register.tsx":"9","C:\\projects\\kijiji\\server\\client\\src\\components\\SignIn.tsx":"10","C:\\projects\\kijiji\\server\\client\\src\\components\\SignInForm.tsx":"11","C:\\projects\\kijiji\\server\\client\\src\\reducers\\authReducer.tsx":"12","C:\\projects\\kijiji\\server\\client\\src\\actions\\index.tsx":"13","C:\\projects\\kijiji\\server\\client\\src\\actions\\types.tsx":"14","C:\\projects\\kijiji\\server\\client\\src\\actions\\auth.tsx":"15","C:\\projects\\kijiji\\server\\client\\src\\actions\\axiosConfig.tsx":"16","C:\\projects\\kijiji\\server\\client\\src\\components\\PostAd.tsx":"17","C:\\projects\\kijiji\\server\\client\\src\\components\\requireAuth.tsx":"18","C:\\projects\\kijiji\\server\\client\\src\\CookieService.tsx":"19","C:\\projects\\kijiji\\server\\client\\src\\reducers\\tokenReducer.tsx":"20"},{"size":304,"mtime":1607978870674,"results":"21","hashOfConfig":"22"},{"size":364,"mtime":1607913470313,"results":"23","hashOfConfig":"22"},{"size":89,"mtime":1607912608008,"results":"24","hashOfConfig":"22"},{"size":621,"mtime":1608334308680,"results":"25","hashOfConfig":"22"},{"size":2759,"mtime":1608338515290,"results":"26","hashOfConfig":"22"},{"size":6689,"mtime":1608586243285,"results":"27","hashOfConfig":"22"},{"size":1832,"mtime":1608510087293,"results":"28","hashOfConfig":"22"},{"size":601,"mtime":1608586829784,"results":"29","hashOfConfig":"22"},{"size":2281,"mtime":1608147419007,"results":"30","hashOfConfig":"22"},{"size":1789,"mtime":1608147409181,"results":"31","hashOfConfig":"22"},{"size":5098,"mtime":1608147868733,"results":"32","hashOfConfig":"22"},{"size":946,"mtime":1608584144429,"results":"33","hashOfConfig":"22"},{"size":51,"mtime":1608062436382,"results":"34","hashOfConfig":"22"},{"size":323,"mtime":1608586410400,"results":"35","hashOfConfig":"22"},{"size":3470,"mtime":1608585976325,"results":"36","hashOfConfig":"22"},{"size":3246,"mtime":1608586427176,"results":"37","hashOfConfig":"22"},{"size":281,"mtime":1608333002951,"results":"38","hashOfConfig":"22"},{"size":1943,"mtime":1608587031527,"results":"39","hashOfConfig":"22"},{"size":1288,"mtime":1608259859365,"results":"40","hashOfConfig":"22"},{"size":690,"mtime":1608586979277,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1pba2ji",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\projects\\kijiji\\server\\client\\src\\index.tsx",[],["86","87"],"C:\\projects\\kijiji\\server\\client\\src\\components\\App.tsx",[],"C:\\projects\\kijiji\\server\\client\\src\\browserHistory.tsx",[],"C:\\projects\\kijiji\\server\\client\\src\\components\\Routes.tsx",[],"C:\\projects\\kijiji\\server\\client\\src\\components\\Header.tsx",["88"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signOut } from \"../actions\";\r\nimport { StoreState } from \"../reducers\";\r\nimport CookieService from \"../CookieService\";\r\n\r\ninterface IHeader {\r\n    authStatus?: string | null;\r\n    signOut(): void;\r\n}\r\n\r\nconst Header: React.FC<IHeader> = (props) => {\r\n    const history = useHistory();\r\n    return (\r\n        <nav>\r\n            <div className=\"headerInfoWrap\">\r\n                <Link to=\"/\">\r\n                    <img\r\n                        className=\"logo\"\r\n                        src=\"https://i.gyazo.com/0a31f614433ad0e8d1ee0f13893d9f41.png\"\r\n                        alt=\"logo\"\r\n                    />\r\n                </Link>\r\n                <div className=\"headerProfileAndPostWrap\">\r\n                    <h1\r\n                        className={\r\n                            props.authStatus\r\n                                ? \"navAuthStatusHide\"\r\n                                : \"navAuthStatus\"\r\n                        }\r\n                        onClick={() => {\r\n                            history.push(\"/signup\");\r\n                        }}\r\n                    >\r\n                        Register\r\n                    </h1>\r\n                    <h1\r\n                        className={\r\n                            props.authStatus\r\n                                ? \"navAuthStatusHide\"\r\n                                : \"navAuthStatus\"\r\n                        }\r\n                        onClick={() => {\r\n                            history.push(\"/signin\");\r\n                        }}\r\n                    >\r\n                        Sign in\r\n                    </h1>\r\n                    <h1\r\n                        className={\r\n                            props.authStatus\r\n                                ? \"navAuthStatus\"\r\n                                : \"navAuthStatusHide\"\r\n                        }\r\n                        onClick={() => {\r\n                            props.signOut();\r\n                        }}\r\n                    >\r\n                        Sign Out\r\n                    </h1>\r\n\r\n                    <button\r\n                        onClick={() => {\r\n                            history.push(\"/post-ad\");\r\n                        }}\r\n                        className=\"postAdButton\"\r\n                    >\r\n                        Post Ad\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: StoreState) => {\r\n    return {\r\n        authStatus: state.authStatus.authenticated,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, { signOut })(Header);\r\n","C:\\projects\\kijiji\\server\\client\\src\\components\\RegisterForm.tsx",["89","90","91","92","93"],"C:\\projects\\kijiji\\server\\client\\src\\Root.tsx",[],"C:\\projects\\kijiji\\server\\client\\src\\reducers\\index.tsx",[],"C:\\projects\\kijiji\\server\\client\\src\\components\\Register.tsx",[],"C:\\projects\\kijiji\\server\\client\\src\\components\\SignIn.tsx",[],"C:\\projects\\kijiji\\server\\client\\src\\components\\SignInForm.tsx",["94","95","96","97"],"import React, { ComponentType, useEffect } from \"react\";\r\nimport {\r\n    Field,\r\n    reduxForm,\r\n    reset,\r\n    change,\r\n    FormErrors,\r\n    InjectedFormProps,\r\n} from \"redux-form\";\r\n//compose is used to make it easier to \"organize\" mapStateToProps and redux form\r\nimport { StoreState } from \"../reducers\";\r\nimport { connect } from \"react-redux\";\r\nimport { SignInFormProps } from \"./SignIn\";\r\n//Re-usable component\r\nexport interface SignInFormValues {\r\n    email: string;\r\n    password: string;\r\n}\r\n\r\n//Typescriptand redux form:\r\n//https://levelup.gitconnected.com/react-js-typescript-redux-redux-form-jest-e522995ebe36\r\n\r\n//Need to hoist render methods up or else it will give error where it will unfocus after first characther is typed\r\n//https://stackoverflow.com/questions/39839051/using-redux-form-im-losing-focus-after-typing-the-first-character\r\n\r\nconst renderError = ({ error, touched }: any) => {\r\n    if (touched && error) {\r\n        //Touched (for input) will be false at first\r\n        //When clicked and then clicked otuside of the input, it will be true\r\n        return <div className=\"errorText\">{error}</div>;\r\n    }\r\n};\r\n\r\nconst renderTextInput = ({ input, label, meta, placeHolder }: any) => {\r\n    //\"component\" property automatically passes props to argument, it has {input properties and meta properties}\r\n    //\"label\" automatically passes props to arguments\r\n    return (\r\n        <div>\r\n            <label>{label}</label>\r\n            <input className=\"createAuthInputs\" {...input} autoComplete=\"off\" />\r\n            {renderError(meta)}\r\n        </div>\r\n    );\r\n    //{..input} is shortcut for redux-form; where you take all the input from \"component's\" props and pass it as\r\n    //props to <input>\r\n};\r\n\r\nconst renderPasswordInput = ({ input, label, meta, placeHolder }: any) => {\r\n    return (\r\n        <div>\r\n            <label>{label}</label>\r\n            <input\r\n                className=\"createAuthInputs\"\r\n                type=\"password\"\r\n                {...input}\r\n                autoComplete=\"off\"\r\n            />\r\n            {renderError(meta)}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst SignInForm: React.FC<\r\n    SignInFormProps & InjectedFormProps<{}, SignInFormProps>\r\n> = (props) => {\r\n    const onSubmit = (formValues: any, dispatch: any) => {\r\n        //onSubmit's default param is any\r\n        //event.preventDefault() is automatically called with handleSubmit, a redux-form property\r\n        //form values are the values from the fields that redux-form automatiacally passes\r\n        //after clicking the submit button\r\n        //dispatch(reset(\"registerForm\"));\r\n        props.onSubmit(formValues);\r\n        // dispatch(change(\"signInForm\", \"password\", \"\"));\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <form className=\"authForm\" onSubmit={props.handleSubmit(onSubmit)}>\r\n                <h1>Sign In</h1>\r\n                <div className=\"authFieldSection\">\r\n                    <div className=\"authFormFieldTitleWrap\">\r\n                        <h1>Email</h1>\r\n                        <h3 className=\"authFormFieldTitleEmailInUse\">\r\n                            {props.authStatus}\r\n                        </h3>\r\n                    </div>\r\n                    <Field\r\n                        name=\"email\"\r\n                        type=\"text\"\r\n                        component={renderTextInput}\r\n                    />\r\n                </div>\r\n                <div className=\"authFieldSection\">\r\n                    <div className=\"authFormFieldTitleWrap\">\r\n                        <h1>Password</h1>\r\n                        <h3 className=\"authFormFieldTitleEmailInUse\">\r\n                            {props.authStatus}\r\n                        </h3>\r\n                    </div>\r\n                    <Field\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        component={renderPasswordInput}\r\n                    />\r\n                </div>\r\n\r\n                <button className=\"authButton\">Sign In</button>\r\n            </form>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst validate = (\r\n    formValues: SignInFormValues\r\n): FormErrors<SignInFormValues> => {\r\n    //MUST BE NAMED VALIDATE! Other names would be ignored by reduxForm(..)\r\n    const errors: FormErrors<SignInFormValues> = {};\r\n    //If you return an empty object, redux form will assume everything is ok\r\n    if (!formValues.email) {\r\n        //user did not enter title, so undefined\r\n        errors.email = \"You must enter an email\";\r\n        //Must be the same name as field name! The \"error\" property in {meta} would receive this\r\n    }\r\n    if (!formValues.password) {\r\n        errors.password = \"You must enter a password\";\r\n    }\r\n    return errors;\r\n    //Erors is going to be passed to renderInput's meta\r\n};\r\n\r\nconst mapStateToProps = (state: StoreState) => {\r\n    return {\r\n        authStatus: state.authStatus.errorMessage,\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {}\r\n)(\r\n    reduxForm<{}, SignInFormProps>({\r\n        form: \"signInForm\",\r\n        validate,\r\n    })(SignInForm)\r\n);\r\n","C:\\projects\\kijiji\\server\\client\\src\\reducers\\authReducer.tsx",[],"C:\\projects\\kijiji\\server\\client\\src\\actions\\index.tsx",[],"C:\\projects\\kijiji\\server\\client\\src\\actions\\types.tsx",[],"C:\\projects\\kijiji\\server\\client\\src\\actions\\auth.tsx",["98","99","100"],"C:\\projects\\kijiji\\server\\client\\src\\actions\\axiosConfig.tsx",[],"C:\\projects\\kijiji\\server\\client\\src\\components\\PostAd.tsx",["101"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport requireAuth from \"./requireAuth\";\r\nconst PostAd: React.FC<{}> = () => {\r\n    return (\r\n        <div>\r\n            <h1>Post Ad Page</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default requireAuth(PostAd);\r\n","C:\\projects\\kijiji\\server\\client\\src\\components\\requireAuth.tsx",["102"],"C:\\projects\\kijiji\\server\\client\\src\\CookieService.tsx",[],"C:\\projects\\kijiji\\server\\client\\src\\reducers\\tokenReducer.tsx",[],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":7,"column":8,"nodeType":"109","messageId":"110","endLine":7,"endColumn":21},{"ruleId":"107","severity":1,"message":"111","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":30},{"ruleId":"107","severity":1,"message":"112","line":1,"column":32,"nodeType":"109","messageId":"110","endLine":1,"endColumn":41},{"ruleId":"107","severity":1,"message":"113","line":5,"column":5,"nodeType":"109","messageId":"110","endLine":5,"endColumn":10},{"ruleId":"107","severity":1,"message":"114","line":6,"column":5,"nodeType":"109","messageId":"110","endLine":6,"endColumn":11},{"ruleId":"107","severity":1,"message":"115","line":11,"column":10,"nodeType":"109","messageId":"110","endLine":11,"endColumn":20},{"ruleId":"107","severity":1,"message":"111","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":30},{"ruleId":"107","severity":1,"message":"112","line":1,"column":32,"nodeType":"109","messageId":"110","endLine":1,"endColumn":41},{"ruleId":"107","severity":1,"message":"113","line":5,"column":5,"nodeType":"109","messageId":"110","endLine":5,"endColumn":10},{"ruleId":"107","severity":1,"message":"114","line":6,"column":5,"nodeType":"109","messageId":"110","endLine":6,"endColumn":11},{"ruleId":"107","severity":1,"message":"116","line":3,"column":8,"nodeType":"109","messageId":"110","endLine":3,"endColumn":13},{"ruleId":"107","severity":1,"message":"117","line":5,"column":8,"nodeType":"109","messageId":"110","endLine":5,"endColumn":15},{"ruleId":"107","severity":1,"message":"118","line":8,"column":7,"nodeType":"109","messageId":"110","endLine":8,"endColumn":20},{"ruleId":"107","severity":1,"message":"119","line":2,"column":10,"nodeType":"109","messageId":"110","endLine":2,"endColumn":14},{"ruleId":"107","severity":1,"message":"120","line":6,"column":10,"nodeType":"109","messageId":"110","endLine":6,"endColumn":21},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"@typescript-eslint/no-unused-vars","'CookieService' is defined but never used.","Identifier","unusedVar","'ComponentType' is defined but never used.","'useEffect' is defined but never used.","'reset' is defined but never used.","'change' is defined but never used.","'StoreState' is defined but never used.","'axios' is defined but never used.","'history' is defined but never used.","'cookieService' is assigned a value but never used.","'Link' is defined but never used.","'useLocation' is defined but never used.","no-global-assign","no-unsafe-negation"]